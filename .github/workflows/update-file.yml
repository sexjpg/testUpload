name: Update File from Static Page

on:
  repository_dispatch:
    types: [update-file-event]

jobs:
  update_file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Validate file path
        id: validate_path
        run: |
          FILE_PATH="${{ github.event.client_payload.filename }}"
          # 检查路径是否以指定目录开头（如 uploads/）
          if [[ "$FILE_PATH" != uploads/* ]]; then
            echo "Error: File must be placed in uploads directory"
            exit 1
          fi
          # 防止路径穿越攻击
          REAL_PATH=$(realpath "$FILE_PATH")
          if [[ "$REAL_PATH" != "$(realpath "uploads")"/* ]]; then
            echo "Error: Invalid path traversal attempt"
            exit 1
          fi

      - name: Get data from payload
        id: payload_data
        run: |
          echo "filename=${{ github.event.client_payload.filename }}" >> $GITHUB_OUTPUT
          echo "content_base64=${{ github.event.client_payload.content_base64 }}" >> $GITHUB_OUTPUT
          FILE_PATH="${{ github.event.client_payload.filename }}"
          DIR_NAME=$(dirname "$FILE_PATH")
          if [[ "$DIR_NAME" != "." && ! -d "$DIR_NAME" ]]; then
            mkdir -p "$DIR_NAME"
            echo "Created directory: $DIR_NAME"
          fi

      - name: Handle file conflict
        id: conflict_handler
        run: |
          FILE_PATH="${{ steps.payload_data.outputs.filename }}"
          if [ -f "$FILE_PATH" ]; then
            # 获取文件首次提交时间作为创建时间
            TIMESTAMP=$(git log --reverse --format=%cd -- $FILE_PATH | head -n 1 | date +%Y%m%d%H%M%S)
            # 重命名旧文件
            BASENAME=$(basename "$FILE_PATH")
            DIRNAME=$(dirname "$FILE_PATH")
            EXTENSION="${BASENAME##*.}"
            FILENAME="${BASENAME%.*}"
            NEW_NAME="${FILENAME}_${TIMESTAMP}.${EXTENSION}"
            git mv "$FILE_PATH" "$DIRNAME/$NEW_NAME"
            echo "Renamed existing file to: $DIRNAME/$NEW_NAME"
            echo "old_filename=$DIRNAME/$NEW_NAME" >> $GITHUB_OUTPUT
          fi

      - name: Decode and Write File
        run: |
          echo "Writing to file: ${{ steps.payload_data.outputs.filename }}"
          echo "${{ steps.payload_data.outputs.content_base64 }}" | base64 -d > "${{ steps.payload_data.outputs.filename }}"
          cat "${{ steps.payload_data.outputs.filename }}"

      - name: Commit and Push changes
        run: |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "actions@github.com"
          git add "${{ steps.payload_data.outputs.filename }}"
          # 如果存在重命名的旧文件也添加
          if [ -n "${{ steps.conflict_handler.outputs.old_filename }}" ]; then
            git add "${{ steps.conflict_handler.outputs.old_filename }}"
            git commit -m "Update ${{ steps.payload_data.outputs.filename }} and archive old version"
          else
            git commit -m "Update ${{ steps.payload_data.outputs.filename }} via Action"
          fi
          git push
        env:
          GH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
